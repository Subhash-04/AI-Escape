/* Base Styles */
:root {
  --primary-color: #00ff99; /* Neon Green */
  --secondary-color: #ff00ff; /* Neon Magenta */
  --tertiary-color: #00ffff; /* Neon Cyan */
  --bg-dark: #0a0a1f; /* Dark Blue/Purple */
  --bg-darker: #03030a; /* Very Dark Blue/Purple */
  --bg-light: #1a1a33; /* Lighter Blue/Purple */
  --text-color: #00ff99;
  --error-color: #ff3333;
  --success-color: #00ff99;
  --warning-color: #ffcc00;
  --font-primary: "Orbitron", sans-serif;
  --font-secondary: "Share Tech Mono", monospace;
  --chessboard-light: #d6f5ff; /* Bright light blue for chess squares */
  --chessboard-dark: #0d4863; /* Darker blue for chess squares */
  --queen-color: #ff00ff; /* Queen pieces color */
  --queen-conflict: #ff3333; /* Color for conflicting queens */
  --neon-orange: #ff9900; /* For backstory elements */
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: var(--bg-darker);
  color: var(--text-color);
  font-family: var(--font-secondary);
  min-height: 100vh; /* Changed from height to min-height */
  overflow-y: auto; /* Changed from overflow: hidden to allow vertical scroll */
  position: relative;
}

.cyberpunk-theme {
    background: var(--bg-darker) url("assets/cyberpunk_interface_background.webp") no-repeat center center fixed;
    background-size: cover;
}

/* Game Container */
#game-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 20px;
  backdrop-filter: blur(2px) brightness(0.7);
}

/* Decorative Glitches */
.decorative-glitch {
    position: absolute;
    width: 100px; /* Adjust as needed */
    height: auto;
    opacity: 0.5;
    pointer-events: none; /* So they don't interfere with clicks */
}
.top-left {
    top: 20px;
    left: 20px;
    transform: rotate(-15deg);
}
.bottom-right {
    bottom: 20px;
    right: 20px;
    transform: rotate(15deg) scaleX(-1);
}


/* Intro Screen */
#story-intro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  height: 100%;
  padding: 20px;
  position: relative; /* For absolute positioning of background */
  width: 100%;
}

.intro-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("assets/cyberpunk_interface_background.webp") no-repeat center center;
    background-size: cover;
    opacity: 0.3; /* Adjust opacity as needed */
    z-index: -1; /* Behind other intro content */
}

.logo-container {
  margin-bottom: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.main-logo {
    width: 300px; /* Adjust as needed */
    max-width: 80%;
    height: auto;
    margin-bottom: 10px;
    filter: drop-shadow(0 0 10px var(--primary-color));
}

.glitch {
  font-family: var(--font-primary);
  font-size: clamp(24px, 5vw, 48px);
  position: relative;
  display: inline-block;
  margin-bottom: 10px;
  color: var(--primary-color);
  text-shadow: 0 0 5px var(--primary-color), 0 0 10px var(--primary-color);
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
  background: var(--bg-darker); /* Match body background to hide text behind */
}

.glitch::before {
  left: 2px;
  text-shadow: -1px 0 var(--secondary-color);
  animation: glitch-anim-1 2.5s infinite linear alternate-reverse;
}

.glitch::after {
  left: -2px;
  text-shadow: -1px 0 var(--tertiary-color), 1px 1px var(--tertiary-color);
  animation: glitch-anim-2 3s infinite linear alternate-reverse;
}

.subtitle {
  font-family: var(--font-primary);
  color: var(--secondary-color);
  font-size: clamp(16px, 3vw, 24px);
  letter-spacing: 3px;
  text-shadow: 0 0 5px var(--secondary-color);
  text-transform: uppercase;
}

.intro-content {
  max-width: 700px;
  margin-bottom: 30px;
  background: rgba(10, 10, 31, 0.7);
  padding: 20px;
  border: 1px solid var(--tertiary-color);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
  border-radius: 5px;
}

#animated-intro-container {
    display: flex;
    flex-direction: column; /* Stack images and text */
    align-items: center;
    gap: 15px;
    position: relative;
}

.intro-image {
    max-width: 100%;
    border-radius: 3px;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInSlideUp 1s forwards;
}

.nexus-ai {
    width: 150px; /* Adjust as needed */
    height: auto;
    animation-delay: 0.5s;
}

.neural-network {
    width: 250px; /* Adjust as needed */
    height: auto;
    animation-delay: 1s;
}

.intro-text-overlay {
    font-size: clamp(14px, 2.5vw, 18px);
    line-height: 1.6;
    color: var(--text-color);
    text-shadow: 0 0 3px var(--bg-darker);
    margin-top: 10px;
    animation: fadeInSlideUp 1s forwards 1.5s;
    opacity:0;
}

@keyframes fadeInSlideUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn-container {
    margin-top: 20px;
}

/* Enhanced Button Styles */
.cyberpunk-button {
    background: linear-gradient(to right, rgba(0, 255, 153, 0.1), rgba(0, 0, 0, 0.7));
    border: 2px solid var(--primary-color);
    color: var(--primary-color);
    padding: 12px 30px;
    font-family: var(--font-primary);
    font-size: clamp(16px, 3vw, 20px);
    text-transform: uppercase;
    letter-spacing: 2px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
    text-shadow: 0 0 5px var(--primary-color);
    box-shadow: 0 0 10px rgba(0, 255, 153, 0.3), inset 0 0 5px rgba(0, 255, 153, 0.2);
}

.cyberpunk-button:hover {
    color: #000;
    background: linear-gradient(to right, var(--primary-color), #00cc88);
    box-shadow: 0 0 20px var(--primary-color), 0 0 40px var(--primary-color), inset 0 0 10px rgba(255, 255, 255, 0.5);
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    transform: translateY(-2px);
}

.cyberpunk-button:active {
    transform: translateY(1px);
    box-shadow: 0 0 10px var(--primary-color);
}

.cyberpunk-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, transparent, rgba(0, 255, 153, 0.4), transparent);
    transition: left 0.7s ease;
    z-index: 0;
}

.cyberpunk-button:hover::before {
    left: 100%;
}

.cyberpunk-button-small {
    background: linear-gradient(to right, rgba(0, 255, 255, 0.1), rgba(0, 0, 0, 0.7));
    border: 1px solid var(--tertiary-color);
    color: var(--tertiary-color);
    padding: 8px 15px;
    font-size: 0.9em;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
    font-family: var(--font-primary);
    text-shadow: 0 0 3px var(--tertiary-color);
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.3);
}

.cyberpunk-button-small:hover {
    color: #000;
    background: linear-gradient(to right, var(--tertiary-color), #00dddd);
    box-shadow: 0 0 15px var(--tertiary-color);
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
}

/* Reset Button Style */
#reset-sequence-btn, #reset-unscramble-btn, input[type="reset"], button[id^="reset"] {
    background: linear-gradient(to right, rgba(255, 204, 0, 0.1), rgba(0, 0, 0, 0.7));
    border: 1px solid var(--warning-color);
    color: var(--warning-color);
    text-shadow: 0 0 3px var(--warning-color);
    box-shadow: 0 0 5px rgba(255, 204, 0, 0.3);
}

#reset-sequence-btn:hover, #reset-unscramble-btn:hover, input[type="reset"]:hover, button[id^="reset"]:hover {
    background: linear-gradient(to right, var(--warning-color), #cc9900);
    color: #000;
    box-shadow: 0 0 15px var(--warning-color);
}

/* Submit Button Style */
button[id^="submit"], button[id^="check"], .cyberpunk-button[onclick*="check"], .cyberpunk-button[onclick*="submit"] {
    background: linear-gradient(to right, rgba(0, 255, 153, 0.1), rgba(0, 0, 0, 0.7));
    border: 2px solid var(--primary-color);
    color: var(--primary-color);
    padding: 12px 35px;
    font-size: 1.1em;
    letter-spacing: 2px;
    text-shadow: 0 0 6px var(--primary-color);
    box-shadow: 0 0 10px rgba(0, 255, 153, 0.4), inset 0 0 5px rgba(0, 255, 153, 0.2);
}

button[id^="submit"]:hover, button[id^="check"]:hover, .cyberpunk-button[onclick*="check"]:hover, .cyberpunk-button[onclick*="submit"]:hover {
    background: linear-gradient(to right, var(--primary-color), #00cc88);
    box-shadow: 0 0 20px var(--primary-color), 0 0 35px rgba(0, 255, 153, 0.6);
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.6);
    letter-spacing: 3px;
}

/* Character entry fields */
input[type="text"], input[type="number"] {
    background: rgba(0, 20, 40, 0.7);
    border: 2px solid var(--tertiary-color);
    color: var(--tertiary-color);
    padding: 12px 16px;
    font-family: var(--font-secondary);
    font-size: 1.1em;
    text-align: center;
    transition: all 0.3s ease;
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.3), inset 0 0 10px rgba(0, 0, 0, 0.5);
    text-shadow: 0 0 5px var(--tertiary-color);
}

input[type="text"]:focus, input[type="number"]:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 15px var(--primary-color), inset 0 0 10px rgba(0, 0, 0, 0.5);
}

.instructions-container {
    margin-top: 30px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    max-width: 800px;
}

.instruction-item {
    display: flex;
    align-items: center;
    gap: 8px;
    background: rgba(var(--bg-light-rgb, 26, 26, 51), 0.6);
    padding: 8px 12px;
    border-radius: 3px;
    border: 1px solid var(--tertiary-color);
    font-size: clamp(12px, 2vw, 14px);
}

.instruction-icon {
    width: 20px; /* Adjust as needed */
    height: 20px;
    /* Removed color filter to keep original icon colors */
}


/* Game Header */
#game-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding: 10px 20px;
  background: rgba(var(--bg-darker-rgb, 3, 3, 10), 0.7);
  border-bottom: 1px solid var(--primary-color);
  position: fixed; /* Keep header at top */
  top: 0;
  left: 0;
  z-index: 10;
}

.header-left, .header-right {
    display: flex;
    align-items: center;
    gap: 15px;
}

.timer {
  font-family: var(--font-primary);
  font-size: clamp(18px, 3vw, 24px);
  color: var(--primary-color);
  padding: 5px 10px;
  border-radius: 3px;
  background: rgba(var(--bg-light-rgb, 26, 26, 51), 0.5);
  border: 1px solid var(--primary-color);
  text-shadow: 0 0 5px var(--primary-color);
}

.timer-warning {
  color: var(--warning-color);
  border-color: var(--warning-color);
  text-shadow: 0 0 5px var(--warning-color);
  animation: pulse 1s infinite;
}

.timer-critical {
  color: var(--error-color);
  border-color: var(--error-color);
  text-shadow: 0 0 5px var(--error-color);
  animation: pulse 0.5s infinite;
}

.progress {
  font-family: var(--font-primary);
  font-size: clamp(14px, 2.5vw, 18px);
  color: var(--tertiary-color);
}

.ctrl-btn {
  background: transparent;
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
  padding: 8px;
  font-size: clamp(14px, 2.5vw, 18px);
  cursor: pointer;
  transition: all 0.3s ease;
  border-radius: 3px;
  display: flex; /* For icon centering */
  align-items: center;
  justify-content: center;
}

.ctrl-btn img {
    width: 16px; /* Adjust icon size */
    height: 16px;
    /* Removed color filter to keep original icon colors */
}

.ctrl-btn:hover {
  background: var(--primary-color);
  color: var(--bg-darker);
  box-shadow: 0 0 10px var(--primary-color);
}

.ctrl-btn:hover img {
    /* Removed color filter to keep original icon colors on hover */
}

.ctrl-btn.paused {
  background: var(--warning-color);
  color: var(--bg-darker);
  border-color: var(--warning-color);
}

/* Main Puzzle Area */
#puzzle-area {
  width: 100%;
  max-width: 900px; /* Limit puzzle area width */
  margin-top: 70px; /* Account for fixed header */
  padding: 20px;
  background: rgba(var(--bg-light-rgb, 26, 26, 51), 0.7);
  border: 1px solid var(--secondary-color);
  border-radius: 5px;
  box-shadow: 0 0 20px rgba(255, 0, 255, 0.3);
}

.dialogue-container {
  margin-bottom: 20px;
  padding: 15px;
  background: rgba(var(--bg-darker-rgb, 3, 3, 10), 0.8);
  border-left: 3px solid var(--primary-color);
  font-style: italic;
  color: var(--tertiary-color);
}

.puzzle-container {
  margin-bottom: 20px;
  min-height: 200px; /* Ensure space for puzzles */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.feedback-container {
  min-height: 30px; /* Space for feedback messages */
  text-align: center;
  font-family: var(--font-primary);
}

/* Pause Overlay */
#pause-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(var(--bg-darker-rgb, 3, 3, 10), 0.9);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
  backdrop-filter: blur(5px);
}

.pause-content {
  text-align: center;
  padding: 30px;
  background: rgba(var(--bg-light-rgb, 26, 26, 51), 0.95);
  border: 2px solid var(--warning-color);
  border-radius: 10px;
  max-width: 400px;
  box-shadow: 0 0 25px rgba(255, 204, 0, 0.5);
}

.pause-content h2 {
    margin-bottom: 15px;
}

.pause-content p {
    margin-bottom: 20px;
    color: var(--tertiary-color);
}

/* Puzzle Specific Styles (Keep existing, adapt colors if needed) */

/* Image Puzzle (New) */
#image-puzzle-container {
    display: grid;
    grid-template-columns: repeat(3, 100px); /* Adjust size as needed */
    grid-template-rows: repeat(3, 100px);
    gap: 5px;
    border: 2px solid var(--primary-color);
    padding: 10px;
    background: rgba(var(--bg-darker-rgb, 3, 3, 10), 0.5);
    margin-bottom: 20px;
}

.puzzle-piece {
    width: 100px; /* Must match grid-template-columns/rows */
    height: 100px;
    background-size: 300px 300px; /* Full image size */
    border: 1px solid var(--tertiary-color);
    cursor: grab;
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
}

.puzzle-piece:active {
    cursor: grabbing;
    transform: scale(1.1);
    box-shadow: 0 0 15px var(--primary-color);
    z-index: 10;
}

#image-puzzle-target {
    margin-top: 20px;
    width: 310px; /* Container size + gaps */
    height: 310px;
    border: 2px dashed var(--secondary-color);
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(3, 100px);
    gap: 5px;
    padding: 3px; /* To make dashed border visible around pieces */
    background: rgba(var(--bg-light-rgb, 26, 26, 51), 0.3);
}

.puzzle-slot {
    width: 100px;
    height: 100px;
    background-color: rgba(var(--tertiary-color-rgb, 0, 255, 255), 0.1);
    border: 1px solid rgba(var(--tertiary-color-rgb, 0, 255, 255), 0.3);
}

/* Text Riddle (Adapt existing or add new) */
.riddle-text {
    font-size: clamp(16px, 2.8vw, 20px);
    color: var(--tertiary-color);
    margin-bottom: 20px;
    line-height: 1.5;
    text-align: center;
}

/* Pattern Lock Puzzle */
#pattern-lock-container {
    display: grid;
    grid-template-columns: repeat(3, 60px);
    gap: 15px;
    margin-bottom: 20px;
}

.pattern-dot {
    width: 60px;
    height: 60px;
    background-color: rgba(var(--tertiary-color-rgb, 0, 255, 255), 0.2);
    border: 2px solid var(--tertiary-color);
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
}

.pattern-dot.active {
    background-color: var(--primary-color);
    box-shadow: 0 0 10px var(--primary-color);
}

#pattern-line-canvas {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none; /* So it doesn't interfere with dot clicks */
}

/* Sound Sequence Puzzle */
#sound-sequence-container {
    display: flex;
    gap: 15px;
    margin-bottom: 20px;
}

.sound-button {
    width: 70px;
    height: 70px;
    background-color: var(--secondary-color);
    border: 2px solid var(--secondary-color);
    border-radius: 5px;
    cursor: pointer;
    transition: transform 0.1s ease, box-shadow 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    font-family: var(--font-primary);
    color: var(--bg-darker);
}

.sound-button:active,
.sound-button.playing {
    transform: scale(0.95);
    box-shadow: 0 0 15px var(--secondary-color);
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}


/* Puzzle Input */
.puzzle-input {
  display: flex;
  flex-direction: column;
  align-items: center; /* Center input elements */
  width: 100%;
  max-width: 350px;
  margin: 0 auto; /* Center the container itself */
}

.puzzle-input input[type="text"] {
  background: rgba(var(--bg-darker-rgb, 3, 3, 10), 0.7);
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  padding: 12px;
  font-size: clamp(16px, 2.8vw, 18px);
  text-align: center;
  margin-bottom: 15px;
  font-family: var(--font-secondary);
  width: 100%;
  border-radius: 3px;
  outline: none;
}

.puzzle-input input[type="text"]::placeholder {
    color: rgba(var(--primary-color-rgb, 0, 255, 153), 0.5);
}

.puzzle-input button {
  /* Use .cyberpunk-button styles by adding the class in HTML */
  width: 100%;
}

/* Hint Button */
.hint-btn {
  position: absolute;
  bottom: 20px; /* Adjusted position */
  right: 20px;
  background: rgba(var(--warning-color-rgb, 255, 204, 0), 0.2);
  color: var(--warning-color);
  border: 1px solid var(--warning-color);
  padding: 8px 15px;
  font-size: clamp(12px, 2vw, 14px);
  cursor: pointer;
  transition: all 0.3s ease;
  border-radius: 3px;
  font-family: var(--font-secondary);
}

.hint-btn:hover {
  background: rgba(var(--warning-color-rgb, 255, 204, 0), 0.4);
  box-shadow: 0 0 10px var(--warning-color);
}

.hint-btn.hint-used {
  opacity: 0.5;
  cursor: not-allowed;
}

.hint-text {
  position: absolute;
  bottom: 60px; /* Adjusted position */
  right: 20px;
  background: rgba(var(--bg-darker-rgb, 3, 3, 10), 0.9);
  border: 1px solid var(--warning-color);
  padding: 10px;
  max-width: 250px;
  font-style: italic;
  color: var(--warning-color);
  border-radius: 3px;
  box-shadow: 0 0 10px rgba(var(--warning-color-rgb, 255, 204, 0), 0.5);
  z-index: 20;
}

/* Feedback Text */
.success-text {
  color: var(--success-color);
  text-shadow: 0 0 10px var(--success-color);
  animation: pulse 1s, glitch-text-feedback 0.5s;
}

.error-text {
  color: var(--error-color);
  text-shadow: 0 0 10px var(--error-color);
  animation: shake 0.5s, glitch-text-feedback-error 0.5s;
}

/* Animations */
@keyframes pulse {
  0% { transform: scale(1); opacity: 0.7; }
  50% { transform: scale(1.05); opacity: 1; }
  100% { transform: scale(1); opacity: 0.7; }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

@keyframes glitch-anim-1 {
  0% { clip-path: polygon(0 0, 100% 0, 100% 30%, 0 30%); transform: translate(-3px, 2px); }
  25% { clip-path: polygon(0 60%, 100% 60%, 100% 100%, 0 100%); transform: translate(2px, -3px); }
  50% { clip-path: polygon(0 25%, 100% 25%, 100% 55%, 0 55%); transform: translate(-2px, 1px); }
  75% { clip-path: polygon(0 80%, 100% 80%, 100% 100%, 0 100%); transform: translate(3px, -1px); }
  100% { clip-path: polygon(0 40%, 100% 40%, 100% 70%, 0 70%); transform: translate(-1px, 2px); }
}

@keyframes glitch-anim-2 {
  0% { clip-path: polygon(0 10%, 100% 10%, 100% 35%, 0 35%); transform: translate(2px, -1px); }
  20% { clip-path: polygon(0 70%, 100% 70%, 100% 90%, 0 90%); transform: translate(-3px, 1px); }
  40% { clip-path: polygon(0 45%, 100% 45%, 100% 65%, 0 65%); transform: translate(1px, -2px); }
  60% { clip-path: polygon(0 5%, 100% 5%, 100% 20%, 0 20%); transform: translate(-1px, 3px); }
  80% { clip-path: polygon(0 50%, 100% 50%, 100% 75%, 0 75%); transform: translate(2px, -2px); }
  100% { clip-path: polygon(0 20%, 100% 20%, 100% 40%, 0 40%); transform: translate(-2px, 1px); }
}

@keyframes glitch-text-feedback {
  0%, 100% { text-shadow: 0 0 5px var(--success-color); transform: skewX(0deg); }
  25% { text-shadow: 2px 2px 0 var(--tertiary-color), -2px -2px 0 var(--secondary-color); transform: skewX(-5deg); }
  50% { text-shadow: -2px 2px 0 var(--tertiary-color), 2px -2px 0 var(--secondary-color); transform: skewX(5deg); }
  75% { text-shadow: 0 0 10px var(--success-color), 0 0 2px var(--bg-darker); transform: skewX(0deg); }
}

@keyframes glitch-text-feedback-error {
  0%, 100% { text-shadow: 0 0 5px var(--error-color); transform: skewX(0deg); }
  25% { text-shadow: 2px 2px 0 var(--warning-color), -2px -2px 0 var(--primary-color); transform: skewX(8deg); }
  50% { text-shadow: -2px 2px 0 var(--warning-color), 2px -2px 0 var(--primary-color); transform: skewX(-8deg); }
  75% { text-shadow: 0 0 10px var(--error-color), 0 0 2px var(--bg-darker); transform: skewX(0deg); }
}

/* Game Over Screens */
.victory-message, .defeat-message {
  text-align: center;
  padding: 30px;
  max-width: 600px;
  margin: auto; /* Center on screen */
  border-radius: 5px;
  box-shadow: 0 0 20px rgba(var(--primary-color-rgb, 0, 255, 153), 0.5);
}

.victory-message {
  background: rgba(var(--primary-color-rgb, 0, 255, 153), 0.1);
  border: 2px solid var(--primary-color);
}

.defeat-message {
  background: rgba(var(--error-color-rgb, 255, 51, 51), 0.1);
  border: 2px solid var(--error-color);
  box-shadow: 0 0 20px rgba(var(--error-color-rgb, 255, 51, 51), 0.5);
}

.victory-message h2, .defeat-message h2 {
    font-family: var(--font-primary);
    font-size: clamp(24px, 4vw, 36px);
    margin-bottom: 15px;
}

.victory-message p, .defeat-message p {
    font-size: clamp(16px, 2.5vw, 18px);
    margin-bottom: 20px;
    line-height: 1.6;
}

.restart-btn {
  /* Use .cyberpunk-button styles by adding the class in HTML */
  margin-top: 20px;
}

/* Hidden Class */
.hidden {
  display: none !important;
}

/* Add RGB versions of colors for RGBA usage if not already present */
:root {
  --primary-color-rgb: 0, 255, 153;
  --secondary-color-rgb: 255, 0, 255;
  --tertiary-color-rgb: 0, 255, 255;
  --bg-darker-rgb: 3, 3, 10;
  --bg-light-rgb: 26, 26, 51;
  --warning-color-rgb: 255, 204, 0;
  --error-color-rgb: 255, 51, 51;
}

/* Dynamic Timer Positioning (Placeholder - to be handled by JS) */
.timer-pos-1 { /* Example class */
    position: absolute;
    top: 20px;
    left: 20px;
}
.timer-pos-2 {
    position: absolute;
    top: 20px;
    right: 20px;
}
.timer-pos-3 {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
}

/* Ensure puzzle backgrounds are distinct if needed, or use a general one */
.puzzle-frame {
  /* This class can be added to puzzle-area if a general background is desired */
  /* background: url('assets/cyberpunk_circuit_pattern.webp') repeat; */
  /* background-color: rgba(var(--bg-light-rgb), 0.8); */
}


/* Key Display Area Styling */
.key-display-area {
    padding: 20px;
    margin-top: 20px;
    background-color: rgba(var(--bg-light-rgb, 26, 26, 51), 0.9);
    border: 2px solid var(--primary-color);
    border-radius: 5px;
    text-align: center;
    color: var(--text-color);
    box-shadow: 0 0 15px rgba(var(--primary-color-rgb, 0, 255, 153), 0.5);
    /* Ensure it's not display: none by default from other rules if .hidden is removed */
    display: block; /* Or flex, grid, depending on desired inner layout */
}

.key-display-area.hidden {
    display: none !important; /* Ensure hidden class takes precedence for hiding */
}

.key-display-area .success-text {
    font-size: 1.2em;
    color: var(--success-color);
    margin-bottom: 10px;
}

.key-display-area .key-name-display {
    font-size: 1.8em;
    color: var(--warning-color); /* Make key name stand out */
    margin: 10px 0 20px 0;
    font-family: var(--font-primary);
    font-weight: bold;
    letter-spacing: 1px;
    text-shadow: 0 0 8px var(--warning-color);
}

.key-display-area .proceed-btn {
    /* Uses .cyberpunk-button, so it should be styled. Add margin if needed. */
    margin-top: 15px;
    padding: 12px 30px;
    font-size: 1.1em;
}

/* Ensure the puzzle frame can accommodate the key display */
.puzzle-frame.image-puzzle-layout {
    display: flex;
    flex-direction: column; /* Stack pieces, grid, and key display */
    align-items: center;
}

/* Neural Network Challenge Styles */
.neural-network-visualization {
    display: flex;
    justify-content: space-around;
    align-items: center;
    margin: 20px 0;
    background: rgba(0, 0, 20, 0.7);
    padding: 15px;
    border-radius: 5px;
    border: 1px solid var(--accent-color);
}

.nn-layer {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.nn-node {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #004466, #00aaff);
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-family: 'Share Tech Mono', monospace;
    box-shadow: 0 0 8px #00aaff;
    position: relative;
}

.input-layer .nn-node {
    background: linear-gradient(135deg, #444422, #aaaa22);
    box-shadow: 0 0 8px #aaaa22;
}

.output-layer .nn-node {
    background: linear-gradient(135deg, #442244, #aa22aa);
    box-shadow: 0 0 8px #aa22aa;
}

.nn-weights-controls {
    margin-top: 20px;
    padding: 10px;
    background: rgba(0, 0, 20, 0.5);
    border: 1px solid var(--accent-color);
    border-radius: 5px;
}

.nn-weights-controls h3 {
    color: var(--accent-color);
    font-family: 'Orbitron', sans-serif;
    margin: 5px 0;
    font-size: 0.9em;
    text-align: center;
}

.weight-sliders {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 10px;
    margin-bottom: 15px;
}

.weight-slider-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-family: 'Share Tech Mono', monospace;
    font-size: 0.8em;
}

.weight-slider-container label {
    margin-bottom: 3px;
    color: var(--text-color);
}

.weight-slider {
    width: 100%;
    height: 10px;
    -webkit-appearance: none;
    appearance: none;
    background: #333;
    outline: none;
    border-radius: 5px;
    margin: 5px 0;
}

.weight-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: var(--accent-color);
    cursor: pointer;
    box-shadow: 0 0 5px var(--accent-color);
}

.weight-slider::-moz-range-thumb {
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: var(--accent-color);
    cursor: pointer;
    box-shadow: 0 0 5px var(--accent-color);
}

.weight-value {
    color: var(--text-color);
    min-width: 30px;
    text-align: center;
}

/* Cryptographic Matrix Challenge Styles */
.crypto-sequence-area {
    margin: 15px 0;
    padding: 10px;
    background: rgba(0, 20, 40, 0.7);
    border: 1px solid var(--accent-color);
    border-radius: 5px;
}

.matrix-key-display, .decryption-process {
    margin-bottom: 20px;
}

.matrix-key-display h3, .decryption-process h3 {
    color: var(--accent-color);
    font-family: 'Orbitron', sans-serif;
    font-size: 0.9em;
    text-align: center;
    margin: 5px 0 10px;
}

.matrix-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 5px;
    max-width: 400px;
    margin: 0 auto;
}

.matrix-cell {
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, #001133, #003366);
    border: 1px solid var(--accent-color);
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--text-color);
    font-family: 'Share Tech Mono', monospace;
    text-shadow: 0 0 5px var(--accent-color);
    font-size: 1.2em;
}

.matrix-cell.empty {
    background: rgba(0, 0, 20, 0.3);
    border: 1px dashed #336699;
}

.decryption-steps {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
    margin-top: 10px;
}

.decryption-step {
    display: flex;
    align-items: center;
    background: rgba(0, 20, 40, 0.5);
    padding: 5px 10px;
    border-radius: 5px;
    border: 1px solid #336699;
}

.encrypted-char, .decrypted-char {
    width: 25px;
    height: 25px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Share Tech Mono', monospace;
    font-weight: bold;
}

.encrypted-char {
    color: #ff3366;
    background: rgba(20, 0, 10, 0.7);
    border: 1px solid #ff3366;
    border-radius: 3px;
}

.decrypted-char {
    color: #33ff99;
    background: rgba(0, 20, 10, 0.7);
    border: 1px solid #33ff99;
    border-radius: 3px;
}

.decryption-arrow {
    margin: 0 5px;
    color: var(--accent-color);
}

.decrypted-char.filled {
    box-shadow: 0 0 5px #33ff99;
}

.decrypted-char.correct {
    background: rgba(0, 40, 20, 0.8);
    box-shadow: 0 0 10px #33ff99;
    animation: pulseGreen 1s;
}

.decrypted-char.error {
    background: rgba(40, 0, 0, 0.8);
    border-color: #ff3366;
    color: #ff3366;
    box-shadow: 0 0 10px #ff3366;
    animation: pulseRed 0.5s;
}

@keyframes pulseGreen {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

@keyframes pulseRed {
    0% { transform: scale(1); }
    25% { transform: scale(1.1); }
    50% { transform: scale(1); }
    75% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Pattern Matching Styles */
.pattern-sequence {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin: 25px 0;
    flex-wrap: wrap;
}

.pattern-number {
    width: 60px;
    height: 60px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #001133, #003366);
    border: 2px solid var(--primary-color);
    border-radius: 5px;
    font-family: var(--font-primary);
    font-size: 1.5em;
    color: var(--primary-color);
    box-shadow: 0 0 8px rgba(0, 255, 153, 0.3);
    transition: all 0.3s ease;
}

.pattern-number.highlight {
    background: linear-gradient(135deg, #003366, #004499);
    transform: scale(1.1);
    box-shadow: 0 0 15px var(--primary-color);
    color: white;
}

.pattern-number.input-container {
    background: linear-gradient(135deg, #002233, #003344);
    padding: 0;
}

.pattern-input {
    width: 100%;
    height: 100%;
    background: transparent;
    border: none;
    text-align: center;
    font-family: var(--font-primary);
    font-size: 1.5em;
    color: var(--primary-color);
    outline: none;
}

.pattern-input::placeholder {
    color: rgba(0, 255, 153, 0.5);
}

.pattern-input.correct-answer {
    color: var(--success-color);
    animation: pulseGreen 1s;
    box-shadow: inset 0 0 15px var(--success-color);
}

.pattern-input.wrong-answer {
    color: var(--error-color);
    animation: pulseRed 0.5s;
    box-shadow: inset 0 0 15px var(--error-color);
}

/* Color Sequence Matching Styles */
.color-sequence-display, 
.user-sequence {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin: 25px 0;
    min-height: 40px;
}

.color-dot {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    box-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
    transition: all 0.3s ease;
}

.color-dot.red {
    background: linear-gradient(135deg, #990000, #ff3333);
    border: 2px solid #ff6666;
}

.color-dot.blue {
    background: linear-gradient(135deg, #000099, #3333ff);
    border: 2px solid #6666ff;
}

.color-dot.green {
    background: linear-gradient(135deg, #009900, #33ff33);
    border: 2px solid #66ff66;
}

.color-dot.yellow {
    background: linear-gradient(135deg, #999900, #ffff33);
    border: 2px solid #ffff66;
}

.color-sequence-input {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin: 30px 0;
}

.color-button {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.2s ease;
}

.color-button:hover {
    transform: scale(1.1);
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.8);
}

.color-button.active {
    transform: scale(0.9);
}

.color-button.red {
    background: linear-gradient(135deg, #990000, #ff3333);
    border: 3px solid #ff6666;
    box-shadow: 0 0 10px #ff3333;
}

.color-button.blue {
    background: linear-gradient(135deg, #000099, #3333ff);
    border: 3px solid #6666ff;
    box-shadow: 0 0 10px #3333ff;
}

.color-button.green {
    background: linear-gradient(135deg, #009900, #33ff33);
    border: 3px solid #66ff66;
    box-shadow: 0 0 10px #33ff33;
}

.color-button.yellow {
    background: linear-gradient(135deg, #999900, #ffff33);
    border: 3px solid #ffff66;
    box-shadow: 0 0 10px #ffff33;
}

.color-dot.correct {
    animation: pulseGreen 0.5s;
    box-shadow: 0 0 15px var(--success-color);
}

.color-dot.error {
    animation: pulseRed 0.5s;
    box-shadow: 0 0 15px var(--error-color);
}

#check-sequence-btn.ready {
    animation: pulseButton 1.5s infinite;
}

@keyframes pulseButton {
    0% { box-shadow: 0 0 0 0 rgba(0, 255, 153, 0.7); }
    70% { box-shadow: 0 0 0 10px rgba(0, 255, 153, 0); }
    100% { box-shadow: 0 0 0 0 rgba(0, 255, 153, 0); }
}

/* Word Unscramble Styles */
.scrambled-letters {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 10px;
    margin: 25px 0;
}

.answer-container {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin: 25px 0;
    min-height: 60px;
}

.letter-tile {
    width: 50px;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #001133, #003366);
    border: 2px solid var(--primary-color);
    color: var(--primary-color);
    font-family: var(--font-primary);
    font-size: 1.5em;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    transform: scale(0);
    box-shadow: 0 0 8px rgba(0, 255, 153, 0.3);
}

.letter-tile.appear {
    transform: scale(1);
    animation: popIn 0.3s forwards;
}

.letter-tile:hover:not(.placed) {
    transform: scale(1.1);
    box-shadow: 0 0 15px var(--primary-color);
}

.letter-tile.placed {
    opacity: 0.5;
    cursor: not-allowed;
}

.letter-tile.in-slot {
    opacity: 1;
    margin: 0;
    width: 100%;
    height: 100%;
}

.answer-slot {
    width: 50px;
    height: 50px;
    border: 2px dashed var(--tertiary-color);
    background: rgba(0, 20, 40, 0.5);
    border-radius: 3px;
    transition: all 0.2s ease;
}

.answer-slot:hover:not(:empty) {
    background: rgba(0, 40, 60, 0.5);
}

.letter-tile.correct {
    background: linear-gradient(135deg, #004400, #00aa00);
    border-color: var(--success-color);
    color: white;
    box-shadow: 0 0 15px var(--success-color);
    animation: pulseGreen 0.5s;
}

.letter-tile.error {
    animation: shake 0.5s;
    border-color: var(--error-color);
    box-shadow: 0 0 15px var(--error-color);
}

@keyframes popIn {
    0% { transform: scale(0); }
    70% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Improve Word Unscramble Level Styles */
#reset-unscramble-btn {
    font-size: 0.9em;
    padding: 8px 15px;
    margin-right: 10px;
    border-radius: 3px;
}

#check-unscramble-btn {
    font-weight: bold;
    position: relative;
    border-radius: 3px;
}

#check-unscramble-btn::after {
    content: "";
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    border: 1px solid rgba(0, 255, 153, 0.3);
    border-radius: 5px;
    pointer-events: none;
    animation: pulseBorder 2s infinite;
}

@keyframes pulseBorder {
    0% { opacity: 0.3; }
    50% { opacity: 0.7; }
    100% { opacity: 0.3; }
}

/* Fix RESET button */
button#RESET, button[value="RESET"] {
    background-color: rgba(255, 204, 0, 0.1);
    border: 1px solid var(--warning-color);
    color: var(--warning-color);
    padding: 5px 10px;
    font-family: var(--font-primary);
    font-size: 0.8em;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    margin-right: 10px;
}

button#RESET:hover, button[value="RESET"]:hover {
    background-color: var(--warning-color);
    color: var(--bg-darker);
    box-shadow: 0 0 10px var(--warning-color);
}

/* Style SUBMIT COMMAND button */
button[id="check-unscramble-btn"], button[onclick*="checkUnscramble"] {
    background: linear-gradient(to right, rgba(0, 255, 153, 0.1), rgba(0, 20, 20, 0.7));
    border: 2px solid var(--primary-color);
    font-size: 1.2em;
    letter-spacing: 3px;
    padding: 15px 40px;
    margin-top: 15px;
    box-shadow: 0 0 15px rgba(0, 255, 153, 0.4), inset 0 0 8px rgba(0, 255, 153, 0.2);
    position: relative;
    overflow: hidden;
}

button[id="check-unscramble-btn"]:hover, button[onclick*="checkUnscramble"]:hover {
    background: linear-gradient(to right, var(--primary-color), #00aa88);
    transform: translateY(-3px);
    box-shadow: 0 0 25px var(--primary-color), 0 0 45px rgba(0, 255, 153, 0.6);
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.6);
}

button[id="check-unscramble-btn"]::before, button[onclick*="checkUnscramble"]::before {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(0, 255, 153, 0.3) 0%, transparent 70%);
    opacity: 0;
    transform: scale(0.5);
    transition: transform 0.5s, opacity 0.5s;
}

button[id="check-unscramble-btn"]:hover::before, button[onclick*="checkUnscramble"]:hover::before {
    opacity: 1;
    transform: scale(1);
}

/* Chessboard Styles */
.chessboard {
    display: grid;
    grid-template-columns: repeat(8, 40px);
    grid-template-rows: repeat(8, 40px);
    gap: 2px;
    margin: 20px auto;
    border: 2px solid var(--tertiary-color);
    padding: 5px;
    background-color: var(--bg-darker);
    max-width: 344px;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
}

.chessboard-square {
    width: 40px;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.chessboard-square:hover {
    box-shadow: 0 0 8px var(--primary-color);
    z-index: 2;
}

.chessboard-square.light {
    background-color: var(--chessboard-light);
}

.chessboard-square.dark {
    background-color: var(--chessboard-dark);
}

.chessboard-square.highlighted {
    box-shadow: inset 0 0 10px var(--warning-color);
}

.queen-icon {
    width: 30px;
    height: 30px;
    background-color: var(--queen-color);
    border-radius: 50%;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 0 5px var(--queen-color);
    z-index: 1;
}

.queen-icon::before {
    content: "♛";
    font-size: 24px;
    color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-shadow: 0 0 5px var(--bg-darker);
}

.queen-icon.conflict {
    background-color: var(--queen-conflict);
    box-shadow: 0 0 10px var(--queen-conflict), 0 0 20px var(--queen-conflict);
    animation: pulse 1s infinite alternate;
}

/* Final Override Styles */
.acquired-keys-display {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
    margin: 20px 0;
    padding: 15px;
    background: rgba(0, 20, 40, 0.7);
    border-radius: 5px;
    border: 1px solid var(--primary-color);
}

.key-fragment {
    padding: 5px 10px;
    background: rgba(0, 255, 153, 0.1);
    border: 1px solid var(--primary-color);
    border-radius: 3px;
    font-family: var(--font-secondary);
    font-size: 0.9em;
}

.timer-pos-critical-center {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 3em;
    z-index: 1000;
    animation: pulse 0.5s infinite;
}

/* Remove the duplicate chessboard styles below */

/* Level Complete Overlay */
.level-complete-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.level-complete-overlay.hidden {
    display: none;
}

.level-complete-message {
  background-color: var(--bg-dark);
  border: 2px solid var(--primary-color);
  border-radius: 5px;
  padding: 2rem;
  text-align: center;
  max-width: 80%;
  box-shadow: 0 0 20px var(--primary-color);
  animation: pulse 2s infinite;
}

.level-complete-message h2 {
  color: var(--primary-color);
  font-family: var(--font-primary);
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.level-complete-message p {
  color: var(--text-color);
  font-family: var(--font-secondary);
  font-size: 1.2rem;
}

/* Graph Visualization Styles */
.graph-visualization {
    position: relative;
    width: 100%;
    height: 300px;
    background-color: rgba(0, 20, 40, 0.7);
    border: 2px solid var(--tertiary-color);
    border-radius: 5px;
    margin: 0 auto;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.2);
    overflow: visible;
}

.graph-node {
    position: absolute;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(0, 60, 120, 0.7);
    border: 2px solid var(--secondary-color);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-color);
    font-weight: bold;
    font-size: 18px;
    z-index: 5;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
    transition: all 0.2s ease;
}

.graph-node[data-node="A"], .node-a {
    background-color: rgba(0, 200, 100, 0.7);
    border-color: var(--primary-color);
}

.graph-node[data-node="F"], .node-f {
    background-color: rgba(200, 0, 100, 0.7);
    border-color: var(--warning-color);
}

.graph-node:hover {
    transform: translate(-50%, -50%) scale(1.1);
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.8);
}

.graph-edge {
    stroke-dasharray: 5, 5;
    animation: dashOffset 30s linear infinite;
}

svg line.graph-edge {
    stroke: var(--tertiary-color);
    stroke-width: 2;
    stroke-opacity: 0.8;
    filter: drop-shadow(0 0 3px rgba(0, 255, 255, 0.5));
}

.edge-weight {
    position: absolute;
    background-color: rgba(0, 40, 80, 0.8);
    color: var(--primary-color);
    border: 1px solid var(--tertiary-color);
    border-radius: 50%;
    width: 25px;
    height: 25px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    z-index: 4;
    transform: translate(-50%, -50%);
}

@keyframes dashOffset {
    from {
        stroke-dashoffset: 0;
    }
    to {
        stroke-dashoffset: 1000;
    }
}

/* Binary Tree Styles */
.binary-tree-container {
    width: 100%;
    height: 300px;
    margin: 20px auto;
    position: relative;
    background-color: rgba(0, 0, 0, 0.3);
    border: 1px solid var(--tertiary-color);
    border-radius: 5px;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.2);
    overflow: visible;
}

.tree-node {
    transition: all 0.3s ease;
    cursor: pointer;
}

.tree-node:hover {
    fill: rgba(255, 0, 255, 0.4) !important;
    filter: drop-shadow(0 0 5px var(--secondary-color));
}

/* Level Completion Modal */
.level-complete-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.level-complete-content {
    background-color: var(--bg-dark);
    padding: 30px;
    border: 2px solid var(--tertiary-color);
    box-shadow: 0 0 20px var(--tertiary-color), 0 0 40px rgba(0, 255, 255, 0.3);
    border-radius: 5px;
    text-align: center;
    max-width: 500px;
    animation: modalAppear 0.5s forwards;
}

.level-complete-content h2 {
    font-family: var(--font-primary);
    color: var(--primary-color);
    font-size: 28px;
    margin-bottom: 15px;
    text-shadow: 0 0 5px var(--primary-color);
}

.level-complete-content p {
    color: var(--text-color);
    margin-bottom: 20px;
    font-size: 16px;
}

.level-complete-content .key-icon {
    width: 80px;
    height: 80px;
    margin: 10px auto 20px;
    background-color: var(--secondary-color);
    mask-image: url('assets/key_icon.svg');
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    animation: pulse 2s infinite;
}

.level-complete-content .continue-btn {
    margin-top: 20px;
}

@keyframes modalAppear {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Holographic Maze Styles */
.holo-maze-container {
    width: 100%;
    max-width: 500px;
    margin: 20px auto;
    position: relative;
    background-color: rgba(0, 10, 30, 0.5);
    border: 2px solid var(--tertiary-color);
    border-radius: 5px;
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(8, 1fr);
    gap: 2px;
    padding: 2px;
}

.maze-cell {
    width: 100%;
    aspect-ratio: 1/1;
    background-color: rgba(20, 80, 120, 0.8); /* Much brighter path color */
    transition: all 0.2s ease;
    cursor: pointer;
    border: 1px solid rgba(0, 255, 255, 0.3); /* More visible borders */
}

.maze-cell.path {
    background-color: rgba(40, 120, 160, 0.9); /* Brighter, more distinct path color */
}

.maze-cell.player {
    background-color: rgba(0, 255, 153, 1); /* Full opacity for player */
    box-shadow: 0 0 15px var(--primary-color), inset 0 0 10px white;
    z-index: 2;
    animation: pulse 1.5s infinite;
    border: 2px solid white; /* White border to make it stand out */
}

.maze-cell.target {
    background-color: rgba(255, 0, 255, 1); /* Full opacity for target */
    box-shadow: 0 0 15px var(--secondary-color), inset 0 0 10px white;
    border: 2px solid white; /* White border to make it stand out */
}

.maze-cell.wall {
    background-color: rgba(5, 20, 40, 0.95); /* Much darker for walls */
    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.8);
    cursor: not-allowed;
    border: 1px solid rgba(0, 0, 100, 0.5); /* Distinct border for walls */
}

.maze-cell.adjacent-move {
    border: 2px dashed rgba(0, 255, 153, 0.7);
    box-shadow: inset 0 0 10px rgba(0, 255, 153, 0.3);
    animation: pulse 2s infinite;
}

.maze-cell.adjacent-move:hover {
    border: 2px solid var(--primary-color);
    box-shadow: 0 0 15px var(--primary-color), inset 0 0 10px rgba(0, 255, 153, 0.5);
    transform: scale(1.05);
    z-index: 3;
}

/* Quantum Circuit Styles */
.quantum-circuit-container {
    width: 100%;
    max-width: 400px;
    height: 300px;
    margin: 20px auto;
    position: relative;
    background-color: rgba(0, 0, 0, 0.3);
    border: 1px solid var(--tertiary-color);
    border-radius: 5px;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.2);
}

.quantum-circuit-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 10px;
    width: 300px;
    height: 300px;
    margin: 0 auto;
    padding: 15px;
}

.circuit-piece {
    width: 90px;
    height: 90px;
    background-color: rgba(0, 30, 60, 0.6);
    border: 2px solid var(--tertiary-color);
    border-radius: 3px;
    cursor: pointer;
    transition: transform 0.3s ease;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    box-shadow: 0 0 8px rgba(0, 255, 255, 0.2);
}

.circuit-piece:hover {
    transform: scale(1.05);
    box-shadow: 0 0 12px rgba(0, 255, 255, 0.4);
}

.circuit-piece.straight {
    background-image: url('assets/circuit_straight.png');
}

.circuit-piece.corner {
    background-image: url('assets/circuit_corner.png');
}

.circuit-piece.tjunction {
    background-image: url('assets/circuit_tjunction.png');
}

.circuit-nodes {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.circuit-node {
    position: absolute;
    width: 30px;
    height: 30px;
    border-radius: 50%;
}

.input-node {
    background-color: rgba(0, 255, 153, 0.6);
    box-shadow: 0 0 10px var(--primary-color);
}

.output-node {
    background-color: rgba(255, 0, 255, 0.6);
    box-shadow: 0 0 10px var(--secondary-color);
}

/* Pattern Sequence Styles */
.pattern-sequence-container {
    width: 100%;
    max-width: 400px;
    margin: 20px auto;
}

.pattern-display {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-bottom: 20px;
}

.pattern-input {
    display: flex;
    justify-content: center;
    gap: 10px;
}

.pattern-number {
    width: 50px;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #001133, #003366);
    border: 2px solid var(--tertiary-color);
    color: var(--tertiary-color);
    font-family: var(--font-mono);
    font-size: 1.5em;
    font-weight: bold;
    border-radius: 5px;
    transition: all 0.3s ease;
    cursor: pointer;
}

.pattern-number.highlight {
    background: linear-gradient(135deg, #004433, #006666);
    border-color: var(--primary-color);
    color: var(--primary-color);
    animation: pulse 0.5s;
    box-shadow: 0 0 15px var(--primary-color);
}

.pattern-number:hover {
    transform: scale(1.05);
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.4);
}

/* Key Slot Styles */
.key-slot {
    width: 150px;
    height: 100px;
    border: 2px solid var(--tertiary-color);
    border-radius: 5px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 10px;
    background-color: rgba(0, 20, 40, 0.6);
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
    overflow: hidden;
}

.key-slot-label {
    font-family: var(--font-primary);
    font-size: 14px;
    color: var(--tertiary-color);
    margin-bottom: 10px;
    text-transform: uppercase;
    letter-spacing: 1px;
}

.key-slot-placeholder {
    font-size: 12px;
    opacity: 0.7;
}

.key-slot.key-available {
    border-color: var(--primary-color);
    box-shadow: 0 0 15px rgba(0, 255, 153, 0.3);
    background-color: rgba(0, 40, 20, 0.6);
}

.key-slot.key-available::before {
    content: "✓";
    position: absolute;
    top: 5px;
    right: 8px;
    color: var(--primary-color);
    font-weight: bold;
}

.key-slot.key-available .key-slot-label {
    color: var(--primary-color);
}

.key-slot.key-available .key-slot-placeholder {
    color: var(--primary-color);
    opacity: 0.9;
}

.key-slot.key-missing {
    border-color: rgba(255, 0, 0, 0.5);
    background-color: rgba(40, 0, 0, 0.4);
}

.key-slot.key-missing::before {
    content: "✗";
    position: absolute;
    top: 5px;
    right: 8px;
    color: rgba(255, 0, 0, 0.7);
    font-weight: bold;
}

.key-slot.key-missing .key-slot-label {
    color: rgba(255, 255, 255, 0.5);
}

.key-slot.key-missing .key-slot-placeholder {
    color: rgba(255, 0, 0, 0.5);
}

.key-slot.key-inserted {
    background-color: rgba(0, 255, 153, 0.2);
    animation: pulse 2s infinite;
}

.key-slot:hover {
    transform: translateY(-3px);
}

/* Code Segment Styles for Final Level */
.override-code-display {
    margin-top: 20px;
    padding: 15px;
    background-color: rgba(0, 0, 0, 0.7);
    border: 1px solid var(--tertiary-color);
    border-radius: 5px;
    width: 100%;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.2);
}

#code-segments {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.code-segment {
    font-family: monospace;
    color: rgba(0, 255, 255, 0.5);
    background-color: rgba(0, 20, 40, 0.8);
    padding: 10px;
    border-left: 3px solid var(--tertiary-color);
    font-size: 16px;
    letter-spacing: 2px;
    transition: all 0.3s ease;
}

.code-segment.active {
    color: var(--tertiary-color);
    background-color: rgba(0, 30, 60, 0.9);
    border-left-color: var(--primary-color);
    text-shadow: 0 0 5px rgba(0, 255, 255, 0.5);
    animation: pulseBorder 2s infinite;
}

/* Button Ready State for Final Levels */
#init-override-btn.ready, #execute-override-btn.ready {
    background: linear-gradient(to right, var(--primary-color), #00cc88);
    color: #000;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    animation: pulseButton 2s infinite;
}

/* Key Slot Container Layout */
.key-slot-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 15px;
    margin-bottom: 20px;
}

#feedback {
    margin: 15px auto;
    min-height: 30px;
    font-family: var(--font-primary);
    text-align: center;
}

.feedback-success {
    color: var(--success-color);
    font-size: 1.2em;
    text-shadow: 0 0 10px var(--success-color);
    animation: pulseGreen 1s;
}

.feedback-error {
    color: var(--error-color);
    font-size: 1.2em;
    text-shadow: 0 0 10px var(--error-color);
    animation: shake 0.5s;
}

.feedback-neutral {
    color: var(--tertiary-color);
    font-size: 1.2em;
    text-shadow: 0 0 8px var(--tertiary-color);
}

/* Door Animation for Level Complete */
.door-container {
    position: relative;
    width: 150px;
    height: 200px;
    margin: 0 auto 20px;
    perspective: 1000px;
}

.door {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #000d1a, #001f33);
    border: 3px solid var(--tertiary-color);
    box-shadow: 0 0 15px var(--tertiary-color);
    position: relative;
    transform-style: preserve-3d;
    transform-origin: left;
    transition: transform 1.5s ease;
    border-radius: 5px;
    overflow: hidden;
}

.door-handle {
    position: absolute;
    width: 10px;
    height: 30px;
    background-color: var(--primary-color);
    border-radius: 3px;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    box-shadow: 0 0 10px var(--primary-color);
}

.door-keyhole {
    position: absolute;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background-color: #000;
    border: 2px solid var(--tertiary-color);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: inset 0 0 5px var(--tertiary-color);
}

.door-light {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, rgba(0, 255, 153, 0.5) 0%, rgba(0, 0, 0, 0) 70%);
    opacity: 0;
    transition: opacity 1s ease;
    pointer-events: none;
}

.door-open {
    transform: rotateY(-105deg);
}

.door-open .door-light {
    opacity: 1;
}

.behind-door {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, rgba(0, 255, 153, 0.3), rgba(0, 0, 0, 0.9));
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 1s ease 0.5s;
}

.door-open + .behind-door {
    opacity: 1;
}

.key-icon-door {
    width: 60px;
    height: 60px;
    background-color: var(--secondary-color);
    mask-image: url('assets/key_icon.svg');
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    animation: pulse 2s infinite;
}

.maze-cell.blocked {
    background-color: rgba(255, 50, 50, 0.6); /* Red-tinted for blocked cell */
    box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
    position: relative;
    overflow: hidden;
}

.maze-cell.blocked::before {
    content: "🔒";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 16px;
    color: white;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.7);
}

.maze-cell.blocked:hover {
    cursor: pointer;
    box-shadow: 0 0 15px rgba(255, 0, 0, 0.8);
}

/* Code Decryption Terminal (Level 7) */
.decryption-terminal {
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
    background: linear-gradient(to bottom, #001a33, #000d1a);
    border: 2px solid var(--tertiary-color);
    border-radius: 5px;
    padding: 15px;
    box-shadow: 0 0 20px rgba(0, 255, 153, 0.3);
    position: relative;
    overflow: hidden;
    min-height: 300px;
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.selected-symbols-display {
    background-color: rgba(0, 0, 0, 0.8);
    border: 1px solid var(--primary-color);
    border-radius: 3px;
    height: 60px;
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 5px;
    gap: 10px;
    position: relative;
    overflow: hidden;
}

.selected-symbols-display::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(to right, transparent, var(--primary-color), transparent);
    animation: scanline 2s linear infinite;
}

.symbols-keypad {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    margin-bottom: 15px;
    min-height: 120px;
    z-index: 5;
    position: relative;
    background-color: rgba(0, 20, 40, 0.7);
    border: 1px solid var(--secondary-color);
    border-radius: 5px;
    padding: 10px;
}

.symbol-key {
    background-color: rgba(0, 30, 60, 0.8);
    border: 1px solid var(--secondary-color);
    border-radius: 3px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.3);
    color: var(--primary-color);
    font-weight: bold;
}

.symbol-key:hover {
    background-color: rgba(0, 50, 80, 0.9);
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
    transform: translateY(-2px);
}

.symbol-key.active {
    background-color: rgba(0, 80, 120, 1);
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.7);
}

.data-streams {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Allow clicks to pass through */
    z-index: 0;
}

.data-stream {
    position: absolute;
    background: linear-gradient(to bottom, transparent, var(--primary-color), transparent);
    width: 2px;
    animation-name: dataStream;
    animation-duration: 3s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

@keyframes dataStream {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(100%);
    }
}

.stream-1 {
    left: 20%;
    height: 70%;
    top: 15%;
    animation-delay: 0s;
}

.stream-2 {
    left: 50%;
    height: 90%;
    top: 5%;
    animation-delay: 1s;
}

.stream-3 {
    left: 80%;
    height: 60%;
    top: 20%;
    animation-delay: 2s;
}

.selected-symbol {
    background-color: rgba(0, 50, 80, 0.7);
    border: 1px solid var(--primary-color);
    border-radius: 3px;
    height: 40px;
    width: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    margin: 5px;
    color: var(--primary-color);
}

@keyframes scanline {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

.data-char {
    position: absolute;
    animation: fadeOut 3s forwards;
    user-select: none;
    pointer-events: none;
}

@keyframes fadeOut {
    0% { opacity: 0.8; }
    100% { opacity: 0; }
}

/* Game Result Screens */
.game-result-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(3, 3, 10, 0.9);
    backdrop-filter: blur(5px);
    z-index: 1000;
}

.result-content {
    max-width: 600px;
    padding: 30px;
    background-color: rgba(10, 10, 31, 0.9);
    border: 2px solid var(--primary-color);
    border-radius: 8px;
    text-align: center;
    animation: appearWithGlow 0.5s forwards;
    box-shadow: 0 0 30px var(--primary-color);
}

.result-header {
    margin-bottom: 20px;
    border-bottom: 1px solid var(--primary-color);
    padding-bottom: 15px;
}

.result-header h1 {
    font-size: 2.5rem;
    margin: 0;
    text-shadow: 0 0 15px var(--primary-color);
}

.result-content p {
    font-size: 1.2rem;
    margin-bottom: 30px;
    color: #fff;
    line-height: 1.5;
}

.result-stats {
    display: flex;
    justify-content: center;
    margin-bottom: 30px;
}

.stat-box {
    width: 200px;
    padding: 15px;
    background-color: rgba(0, 0, 20, 0.6);
    border: 1px solid var(--tertiary-color);
    border-radius: 5px;
    margin: 0 10px;
}

.stat-box h3 {
    font-size: 1rem;
    margin-bottom: 10px;
    color: var(--tertiary-color);
    font-family: var(--font-primary);
    letter-spacing: 1px;
}

.stat-value {
    font-size: 2.5rem;
    font-family: var(--font-primary);
    color: var(--primary-color);
    text-shadow: 0 0 10px var(--primary-color);
}

#mission-failed-screen .result-content {
    border-color: var(--error-color);
    box-shadow: 0 0 30px var(--error-color);
}

#mission-failed-screen .result-header {
    border-color: var(--error-color);
}

#mission-failed-screen .result-header h1 {
    color: var(--error-color);
    text-shadow: 0 0 15px var(--error-color);
}

#mission-failed-screen .stat-box {
    border-color: var(--error-color);
}

#mission-failed-screen .stat-box h3 {
    color: var(--error-color);
}

#mission-failed-screen .stat-value {
    color: var(--error-color);
    text-shadow: 0 0 10px var(--error-color);
}

@keyframes appearWithGlow {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Queue and Stack Implementation Styles */
.data-structure-container {
    width: 100%;
    max-width: 600px;
    margin: 20px auto;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.queue-visualization, .stack-visualization {
    width: 100%;
    min-height: 120px;
    background-color: rgba(0, 15, 30, 0.7);
    border: 2px solid var(--tertiary-color);
    border-radius: 5px;
    padding: 15px;
    margin-bottom: 20px;
    position: relative;
    display: flex;
    align-items: center;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
}

.queue-visualization {
    justify-content: flex-start;
}

.stack-visualization {
    flex-direction: column-reverse;
    justify-content: flex-start;
}

.queue-item, .stack-item {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, rgba(0, 40, 80, 0.8), rgba(0, 60, 100, 0.8));
    border: 2px solid var(--tertiary-color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: var(--font-primary);
    font-size: 24px;
    color: var(--primary-color);
    margin: 0 5px;
    border-radius: 5px;
    transition: all 0.3s ease;
    position: relative;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.2);
}

.stack-item {
    margin: 5px 0;
}

.queue-item.highlight, .stack-item.highlight {
    border-color: var(--primary-color);
    background: linear-gradient(135deg, rgba(0, 80, 60, 0.8), rgba(0, 100, 80, 0.8));
    box-shadow: 0 0 15px var(--primary-color);
    transform: scale(1.05);
    z-index: 2;
}

.queue-markers, .stack-markers {
    position: absolute;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 10px;
    bottom: -30px;
    font-size: 14px;
    color: var(--tertiary-color);
}

.stack-markers {
    height: 100%;
    width: auto;
    flex-direction: column;
    justify-content: flex-start;
    right: -40px;
    bottom: 0;
    padding: 10px 0;
}

.operation-controls {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 15px;
    margin-top: 30px;
}

.input-group {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
}

.input-group input {
    width: 60px;
    height: 40px;
    text-align: center;
    margin-right: 10px;
    font-size: 18px;
}

.queue-placeholder, .stack-placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-style: italic;
    color: var(--tertiary-color);
    opacity: 0.7;
}

.stack-placeholder {
    height: 100px;
}

.challenge-controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
    gap: 10px;
    width: 100%;
    max-width: 500px;
}

.operation-log {
    max-height: 150px;
    overflow-y: auto;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    border: 1px solid var(--tertiary-color);
    border-radius: 5px;
    padding: 10px;
    margin-top: 20px;
    font-family: var(--font-secondary);
    font-size: 14px;
    color: var(--tertiary-color);
}

.operation-log p {
    margin: 5px 0;
    padding: 3px 0;
    border-bottom: 1px solid rgba(0, 255, 255, 0.2);
}

.operation-log p:last-child {
    border-bottom: none;
}

.operation-log .success {
    color: var(--primary-color);
}

.operation-log .error {
    color: var(--error-color);
}

.operation-sequence {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 20px;
    width: 100%;
    justify-content: center;
}

.operation-step {
    padding: 8px 15px;
    background-color: rgba(0, 20, 40, 0.7);
    border: 1px solid var(--secondary-color);
    border-radius: 3px;
    font-family: var(--font-primary);
    font-size: 16px;
    color: var(--secondary-color);
}

.operation-step.current {
    background-color: rgba(0, 40, 20, 0.7);
    border-color: var(--primary-color);
    color: var(--primary-color);
    animation: pulse 1s infinite;
}

.operation-step.completed {
    background-color: rgba(0, 60, 30, 0.5);
    border-color: rgba(0, 255, 153, 0.5);
    color: rgba(0, 255, 153, 0.5);
    text-decoration: line-through;
}

/* Feedback styles for mission success/failure */
.feedback-success {
    color: var(--success-color);
    font-size: 1.2em;
    text-shadow: 0 0 10px var(--success-color);
    animation: pulse 1s;
}

.feedback-error {
    color: var(--error-color);
    font-size: 1.2em;
    text-shadow: 0 0 10px var(--error-color);
    animation: shake 0.5s;
}

.feedback-neutral {
    color: var(--tertiary-color);
    font-size: 1.2em;
    text-shadow: 0 0 8px var(--tertiary-color);
}

/* Backstory Container Styles */
.backstory-container {
  width: 100%;
  max-width: 800px;
  height: 400px;
  position: relative;
  margin-bottom: 20px;
  border: 2px solid var(--tertiary-color);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
  background-color: rgba(10, 10, 31, 0.7);
}

/* Backstory Title Screen */
.backstory-title-screen {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(3, 3, 10, 0.8);
  z-index: 10;
  transition: opacity 1s ease;
}

.backstory-title-screen.hidden {
  opacity: 0;
  pointer-events: none;
}

.backstory-title-content {
  text-align: center;
  padding: 2rem;
}

.backstory-main-title {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: var(--neon-orange);
  text-shadow: 0 0 10px var(--neon-orange);
  letter-spacing: 3px;
  font-family: var(--font-primary);
}

.backstory-subtitle {
  font-size: 1.2rem;
  margin-bottom: 2rem;
  color: var(--tertiary-color);
  letter-spacing: 2px;
  font-family: var(--font-primary);
}

.view-backstory-btn {
  background: rgba(0, 0, 0, 0.3);
  border: 2px solid var(--neon-orange);
  color: var(--neon-orange);
  padding: 0.8rem 1.5rem;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
  text-shadow: 0 0 5px var(--neon-orange);
  box-shadow: 0 0 10px rgba(255, 153, 0, 0.5);
  font-family: var(--font-primary);
  text-transform: uppercase;
  letter-spacing: 1px;
}

.view-backstory-btn:hover {
  background-color: rgba(255, 153, 0, 0.2);
  transform: scale(1.05);
  box-shadow: 0 0 15px rgba(255, 153, 0, 0.7);
}

/* Backstory Slideshow */
.backstory-slideshow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  pointer-events: none;
  transition: opacity 1s ease;
}

.backstory-slideshow.active {
  opacity: 1;
  pointer-events: auto;
}

.backstory-slide {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 1.5s ease;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 20px;
}

.backstory-slide.active {
  opacity: 1;
}

.slide-image {
  width: 80%;
  max-width: 600px;
  height: auto;
  max-height: 250px;
  object-fit: contain;
  border-radius: 8px;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);
  background-color: rgba(0, 0, 0, 0.3);
  padding: 5px;
  border: 1px solid var(--tertiary-color);
}

.slide-caption {
  margin-top: 1rem;
  font-size: 1rem;
  text-align: center;
  max-width: 90%;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 0.8rem;
  border-radius: 5px;
  color: var(--text-color);
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
  font-family: var(--font-secondary);
  letter-spacing: 1px;
  border-left: 3px solid var(--primary-color);
}

/* Backstory Controls */
.backstory-controls {
  position: absolute;
  bottom: 1.5rem;
  right: 1.5rem;
  display: flex;
  gap: 0.8rem;
  z-index: 5;
}

.control-btn {
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(0, 255, 255, 0.3);
  border-radius: 50%;
  color: white;
  font-size: 1.2rem;
  cursor: pointer;
  opacity: 0.7;
  transition: all 0.3s ease;
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.skip-btn {
  border-radius: 5px;
  width: auto;
  padding: 0 10px;
  font-size: 0.8rem;
  font-family: var(--font-primary);
  border-color: var(--secondary-color);
}

.control-btn:hover {
  opacity: 1;
  color: var(--tertiary-color);
  text-shadow: 0 0 5px rgba(0, 255, 255, 0.7);
  border-color: var(--tertiary-color);
  box-shadow: 0 0 8px rgba(0, 255, 255, 0.5);
  background: rgba(0, 0, 0, 0.7);
}

.progress-dots {
  position: absolute;
  bottom: 1rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 0.5rem;
  z-index: 5;
}

.dot {
  width: 10px;
  height: 10px;
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
}

.dot.active {
  background-color: var(--primary-color);
  box-shadow: 0 0 8px var(--primary-color);
}

/* Updated Intro Text Styles */
.intro-content {
  max-width: 700px;
  margin-bottom: 30px;
  background: rgba(10, 10, 31, 0.7);
  padding: 20px;
  border: 1px solid var(--tertiary-color);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
  border-radius: 5px;
}

.intro-text {
  font-size: 1.1rem;
  line-height: 1.6;
  color: var(--text-color);
  text-shadow: 0 0 3px var(--bg-darker);
  font-family: var(--font-secondary);
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .backstory-container {
    height: 350px;
  }
  
  .backstory-main-title {
    font-size: 2.5rem;
  }
  
  .slide-image {
    max-height: 180px;
  }
  
  .slide-caption {
    font-size: 0.9rem;
  }
}

@media (max-width: 480px) {
  .backstory-container {
    height: 300px;
  }
  
  .backstory-main-title {
    font-size: 2rem;
  }
  
  .slide-image {
    max-height: 150px;
  }
}
